{"version":3,"sources":["../Minesweeper1.js"],"names":["minesweeper1","gameboard","countMinesweeper","i","j","count","n","m","length","console","log"],"mappings":";;AAAA,SAASA,YAAT,CAAsBC,SAAtB,EAAiC;AAC7B,QAAIC,mBAAmB,SAAnBA,gBAAmB,CAACC,CAAD,EAAIC,CAAJ,EAAU;AAC7B,YAAIC,QAAQ,CAAZ;AACA,YAAID,IAAI,CAAR,EAAW;AACP,gBAAIH,UAAUE,CAAV,EAAaC,IAAI,CAAjB,KAAuB,CAA3B,EAA8B;AAC1BC;AACH;AACJ;;AAED,YAAID,IAAIE,IAAI,CAAZ,EAAe;AACX,gBAAIL,UAAUE,CAAV,EAAaC,IAAI,CAAjB,KAAuB,CAA3B,EAA8B;AAC1BC;AACH;AACJ;;AAGD,YAAIF,IAAI,CAAJ,IAASC,IAAI,CAAjB,EAAoB;AAChB,gBAAIH,UAAUE,IAAI,CAAd,EAAiBC,IAAI,CAArB,KAA2B,CAA/B,EAAkC;AAC9BC;AACH;AACJ;;AAED,YAAIF,IAAI,CAAJ,IAASC,IAAIE,IAAI,CAArB,EAAwB;AACpB,gBAAIL,UAAUE,IAAI,CAAd,EAAiBC,IAAI,CAArB,KAA2B,CAA/B,EAAkC;AAC9BC;AACH;AACJ;;AAED,YAAID,IAAI,CAAJ,IAASD,IAAII,IAAI,CAArB,EAAwB;AACpB,gBAAIN,UAAUE,IAAI,CAAd,EAAiBC,IAAI,CAArB,KAA2B,CAA/B,EAAkC;AAC9BC;AACH;AACJ;;AAGD,YAAIF,IAAII,IAAI,CAAR,IAAaH,IAAIE,IAAI,CAAzB,EAA4B;AACxB,gBAAIL,UAAUE,IAAI,CAAd,EAAiBC,IAAI,CAArB,KAA2B,CAA/B,EAAkC;AAC9BC;AACH;AACJ;;AAED,YAAIF,IAAI,CAAR,EAAW;AACP,gBAAIF,UAAUE,IAAI,CAAd,EAAiBC,CAAjB,KAAuB,CAA3B,EAA8B;AAC1BC;AACH;AACJ;;AAED,YAAIF,IAAII,IAAI,CAAZ,EAAe;AACX,gBAAIN,UAAUE,IAAI,CAAd,EAAiBC,CAAjB,KAAuB,CAA3B,EAA8B;AAC1BC;AACH;AACJ;;AAED,eAAOA,KAAP;AACH,KArDD;;AAwDA,QAAIE,IAAIN,UAAUO,MAAlB;AAAA,QAA0BF,IAAIL,UAAU,CAAV,EAAaO,MAA3C;AACA,SAAK,IAAIL,IAAI,CAAb,EAAgBA,IAAII,CAApB,EAAuBJ,GAAvB,EAA4B;AACxB,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIE,CAApB,EAAuBF,GAAvB,EAA4B;AACxB,gBAAIH,UAAUE,CAAV,EAAaC,CAAb,KAAmB,CAAvB,EAA0B;AACtB,oBAAIF,iBAAiBC,CAAjB,EAAoBC,CAApB,KAA0BH,UAAUE,CAAV,EAAaC,CAAb,CAA9B,EAA+C;AAC3C,2BAAO,KAAP;AACH;AACJ;AACJ;AACJ;AACD,WAAO,IAAP;AACH;;AAEDK,QAAQC,GAAR,CAAYV,aAAa,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,EACrB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADqB,EAErB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFqB,CAAb,CAAZ","file":"Minesweeper1.js","sourcesContent":["function minesweeper1(gameboard) {\r\n    let countMinesweeper = (i, j) => {\r\n        let count = 0;\r\n        if (j > 0) {\r\n            if (gameboard[i][j - 1] == 9) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (j < n - 1) {\r\n            if (gameboard[i][j + 1] == 9) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n\r\n        if (i > 0 && j > 0) {\r\n            if (gameboard[i - 1][j - 1] == 9) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (i > 0 && j < n - 1) {\r\n            if (gameboard[i - 1][j + 1] == 9) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (j > 0 && i < m - 1) {\r\n            if (gameboard[i + 1][j - 1] == 9) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n\r\n        if (i < m - 1 && j < n - 1) {\r\n            if (gameboard[i + 1][j + 1] == 9) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (i > 0) {\r\n            if (gameboard[i - 1][j] == 9) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (i < m - 1) {\r\n            if (gameboard[i + 1][j] == 9) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n        return count;\r\n    };\r\n\r\n\r\n    let m = gameboard.length, n = gameboard[0].length;\r\n    for (let i = 0; i < m; i++) {\r\n        for (let j = 0; j < n; j++) {\r\n            if (gameboard[i][j] != 9) {\r\n                if (countMinesweeper(i, j) != gameboard[i][j]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nconsole.log(minesweeper1([[0, 1, 9, 1],\r\n    [0, 1, 1, 1],\r\n    [0, 0, 0, 0]]));\r\n"]}