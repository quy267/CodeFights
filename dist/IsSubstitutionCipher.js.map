{"version":3,"sources":["../IsSubstitutionCipher.js"],"names":["isSubstitutionCipher","string1","string2","codes1","Map","codes2","i","length","c1","c2","has","get","set"],"mappings":";;AAAA,SAASA,oBAAT,CAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;AAC5C,QAAIC,SAAS,IAAIC,GAAJ,EAAb;AACA,QAAIC,SAAS,IAAID,GAAJ,EAAb;AACA,SAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIL,QAAQM,MAA5B,EAAoCD,GAApC,EAAyC;AACrC,YAAIE,KAAKP,QAAQK,CAAR,CAAT;AACA,YAAIG,KAAKP,QAAQI,CAAR,CAAT;AACA,YAAIH,OAAOO,GAAP,CAAWF,EAAX,CAAJ,EAAoB;AAChB,gBAAIC,MAAMN,OAAOQ,GAAP,CAAWH,EAAX,CAAV,EACI,OAAO,KAAP;AACP,SAHD,MAIK;AACDL,mBAAOS,GAAP,CAAWJ,EAAX,EAAeC,EAAf;AACH;AACD,YAAIJ,OAAOK,GAAP,CAAWD,EAAX,CAAJ,EAAoB;AAChB,gBAAID,MAAMH,OAAOM,GAAP,CAAWF,EAAX,CAAV,EACI,OAAO,KAAP;AACP,SAHD,MAIK;AACDJ,mBAAOO,GAAP,CAAWH,EAAX,EAAeD,EAAf;AACH;AACJ;AACD,WAAO,IAAP;AAEH","file":"IsSubstitutionCipher.js","sourcesContent":["function isSubstitutionCipher(string1, string2) {\r\n    let codes1 = new Map();\r\n    let codes2 = new Map();\r\n    for (let i = 0; i < string1.length; i++) {\r\n        let c1 = string1[i];\r\n        let c2 = string2[i];\r\n        if (codes1.has(c1)) {\r\n            if (c2 != codes1.get(c1))\r\n                return false;\r\n        }\r\n        else {\r\n            codes1.set(c1, c2);\r\n        }\r\n        if (codes2.has(c2)) {\r\n            if (c1 != codes2.get(c2))\r\n                return false;\r\n        }\r\n        else {\r\n            codes2.set(c2, c1);\r\n        }\r\n    }\r\n    return true;\r\n\r\n}\r\n"]}