{"version":3,"sources":["../WeakNumbers.js"],"names":["weakNumbers","n","result","Array","weakness","weakest","index","w","getWeakness","push","count","dN","getD","i","halfN","console","log"],"mappings":";;AAAA,SAASA,WAAT,CAAqBC,CAArB,EAAwB;AACpB,QAAIC,SAAS,IAAIC,KAAJ,EAAb;AACA,QAAIC,WAAW,CAAf;AAAA,QAAkBC,UAAU,CAA5B;AACA,SAAK,IAAIC,QAAQ,CAAjB,EAAoBA,SAASL,CAA7B,EAAgCK,OAAhC,EAAyC;AACrC,YAAIC,IAAIC,YAAYF,KAAZ,CAAR;AACA,YAAIC,IAAIF,OAAR,EAAiB;AACbA,sBAAUE,CAAV;AACAH,uBAAW,CAAX;AACH,SAHD,MAIK,IAAIG,KAAKF,OAAT,EACDD;AACP;AACDF,WAAOO,IAAP,CAAYJ,OAAZ;AACAH,WAAOO,IAAP,CAAYL,QAAZ;AACA,WAAOF,MAAP;AACH;;AAED,SAASM,WAAT,CAAqBP,CAArB,EAAwB;AACpB,QAAIS,QAAQ,CAAZ;AACA,QAAIT,KAAK,CAAT,EAAY,OAAO,CAAP;AACZ,QAAIU,KAAKC,KAAKX,CAAL,CAAT;AACA,SAAK,IAAIY,IAAI,CAAb,EAAgBA,IAAIZ,CAApB,EAAuBY,GAAvB,EAA4B;AACxB,YAAID,KAAKC,CAAL,IAAUF,EAAd,EACID;AACP;AACD,WAAOA,KAAP;AACH;;AAED,SAASE,IAAT,CAAcX,CAAd,EAAiB;AACb,QAAIA,KAAK,CAAT,EAAY,OAAO,CAAP;AACZ,QAAIA,KAAK,CAAT,EAAY,OAAO,CAAP;AACZ,QAAIS,QAAQ,CAAZ;AACA,QAAII,QAAQb,IAAI,CAAhB;AACA,SAAK,IAAIY,IAAI,CAAb,EAAgBA,KAAKC,KAArB,EAA4BD,GAA5B,EAAiC;AAC7B,YAAIZ,IAAIY,CAAJ,IAAS,CAAb,EAAgBH;AACnB;AACD,WAAOA,QAAQ,CAAf;AACH;;AAEDK,QAAQC,GAAR,CAAYhB,YAAY,CAAZ,CAAZ","file":"WeakNumbers.js","sourcesContent":["function weakNumbers(n) {\r\n    let result = new Array();\r\n    let weakness = 0, weakest = 0;\r\n    for (let index = 1; index <= n; index++) {\r\n        let w = getWeakness(index);\r\n        if (w > weakest) {\r\n            weakest = w;\r\n            weakness = 1;\r\n        }\r\n        else if (w == weakest)\r\n            weakness++;\r\n    }\r\n    result.push(weakest);\r\n    result.push(weakness);\r\n    return result;\r\n}\r\n\r\nfunction getWeakness(n) {\r\n    let count = 0;\r\n    if (n == 1) return 0;\r\n    let dN = getD(n);\r\n    for (let i = 1; i < n; i++) {\r\n        if (getD(i) > dN)\r\n            count++;\r\n    }\r\n    return count;\r\n}\r\n\r\nfunction getD(n) {\r\n    if (n == 1) return 1;\r\n    if (n == 2) return 2;\r\n    let count = 0;\r\n    let halfN = n / 2;\r\n    for (let i = 2; i <= halfN; i++) {\r\n        if (n % i == 0) count++;\r\n    }\r\n    return count + 2;\r\n}\r\n\r\nconsole.log(weakNumbers(9));"]}